//Given a string 's'. The task is to find the smallest window length that
//contains all the characters of the given string at least one time.

class Solution{
    public:
    int findSubString(string str)
    {
        // Your code goes here  
        int l = str.size();
        set<char> st;
        for(int i=0;i<l;i++)
        st.insert(str[i]);
        
        int n = st.size();
        int ans=l , len=1;
        
        int i=l-1,j=l-1;
        unordered_map<char,int>mp;
        while(i>=0)
        {
            // if(mp.find(str[i])==mp.end())
            mp[str[i]]++;
            
            if(mp.size()==n)
            {
                while(mp[str[j]]>1)
                {
                    mp[str[j]]--;
                    j--;
                }
                ans = min(ans,j-i+1);
            }
            i--;
        }
        return ans;
    }
};
