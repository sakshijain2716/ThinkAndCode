// USING TWO POINTER METHOD

bool findPair(int arr[], int size, int n){
    //code
    
     while(i<size && j<size)   
     {
         if(i!=j && arr[j]-arr[i]==n)
        return 1;
        
         else if(arr[j]-arr[i]>n)
         i++;
        
         else
        j++;
     }
     return 0;
}



//USING BINARY SEARCH T.C=O(NLOGN) S.C = O(1)

int binarysearch(int arr[] , int size , int n , int i,int tar)
{
    int st=0 , end = size-1;
    while(st<=end)
    {
        int mid = st+(end-st)/2;
        if(i!=mid && arr[mid]==tar)
        return 1;
        
        else if(tar < arr[mid])
        end = mid-1;
        
        else
        st = mid+1;
    }
    return 0;
}
bool findPair(int arr[], int size, int n){
    //code
    int i=0 , j=1;
    sort(arr , arr+size);
    for(int i=0 ; i<size ; i++)
    {
        int tar = arr[i]+n;
        int ans = binarysearch(arr,size,n,i,tar);
        if(ans==1)
        return 1;
    }
    return 0;
    }
