class Solution {
public:
    vector<int> maxSubsequence(vector<int>& nums, int k) {
        int n = nums.size();
        vector<int>ans;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> pq;
        
        if(k==n)
        return nums;

        for(int i=0;i<n;i++)
        {
            if(pq.size()<k)
            pq.push({nums[i],i});

            else
            {
                if(pq.top().first<nums[i])
                {
                    pq.pop();
                    pq.push({nums[i],i});
                }
            }
        }
      vector<pair<int,int>> temp;
        for(int i=0;i<k;i++)
        {
            temp.push_back({pq.top().second,pq.top().first});
            pq.pop();
        }
        sort(temp.begin(),temp.end());
        for(int i=0;i<k;i++)
        {
            ans.push_back(temp[i].second);
        }
        return ans;
    }
};
